import { hookServerConfiguration } from './hook.config'
import type { AResponse,DResponse,T__aInput,T__aResponse,T__bResponse, } from './models'
import { InternalOperationsDefinition } from './operations.client'
import { startServer } from './server'

export type Queries = {
  {{~#each operations}}{{#if isQuery}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}Input{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{/if}}
  {{~/each}}

}

export type Mutations = {
  {{~#each operations}}{{#if isMutation}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}Input{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type Subscriptions = {
  {{~#each operations}}{{#if isSubscription}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}Input{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type LiveQueries = {
  {{~#each operations}}{{#if (isAllTrue isQuery isLiveQuery)}}
  '{{name}}': {
    input{{#unless hasInput}}?{{/unless}}: {{#if hasInput}}{{name}}Input{{else}}undefined{{/if}}
    response: {{name}}Response
  }{{#unless @last}},{{/unless}}{{~/if}}
  {{~/each}}

}

export type FireboomOperationsDefinition = InternalOperationsDefinition<Queries, Mutations, Subscriptions>

startServer(hookServerConfiguration)
